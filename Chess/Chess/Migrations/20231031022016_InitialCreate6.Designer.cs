// <auto-generated />
using System;
using ChessAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChessAPI.Migrations
{
    [DbContext(typeof(ChessContext))]
    [Migration("20231031022016_InitialCreate6")]
    partial class InitialCreate6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChessAPI.Models.Chess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChessboardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChessboardId");

                    b.ToTable("ChessGames");
                });

            modelBuilder.Entity("ChessAPI.Models.ChessBoard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChessBoards");
                });

            modelBuilder.Entity("ChessAPI.Models.Piece", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("int");

                    b.Property<int>("PieceType")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Pieces");
                });

            modelBuilder.Entity("ChessAPI.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ChessId")
                        .HasColumnType("int");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfTurns")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeRemaining")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChessId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ChessAPI.Models.Square", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChessBoardId")
                        .HasColumnType("int");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("int");

                    b.Property<bool>("LegalNextMove")
                        .HasColumnType("bit");

                    b.Property<bool>("Occupied")
                        .HasColumnType("bit");

                    b.Property<int>("PieceId")
                        .HasColumnType("int");

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PieceId");

                    b.ToTable("Squares");
                });

            modelBuilder.Entity("ChessAPI.Models.Chess", b =>
                {
                    b.HasOne("ChessAPI.Models.ChessBoard", "Chessboard")
                        .WithMany()
                        .HasForeignKey("ChessboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chessboard");
                });

            modelBuilder.Entity("ChessAPI.Models.Piece", b =>
                {
                    b.HasOne("ChessAPI.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("ChessAPI.Models.Player", b =>
                {
                    b.HasOne("ChessAPI.Models.Chess", null)
                        .WithMany("Players")
                        .HasForeignKey("ChessId");
                });

            modelBuilder.Entity("ChessAPI.Models.Square", b =>
                {
                    b.HasOne("ChessAPI.Models.Piece", "Piece")
                        .WithMany()
                        .HasForeignKey("PieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Piece");
                });

            modelBuilder.Entity("ChessAPI.Models.Chess", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
